{
  "name": "Dixa Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "dixa_conversation_started",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        100
      ],
      "id": "98389a09-c313-4004-b3ee-d92945dbbc19",
      "name": "Webhook",
      "webhookId": "67199ba5-4773-4cc1-9e9d-41b46ffdf145"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "# Simple initial message detection\nfrom datetime import datetime\n\nfor item in _input.all():\n    conversation_created = item.json.body.data.conversation.created_at\n    message_created = item.json.body.data.created_at\n    \n    conv_time = datetime.fromisoformat(conversation_created.replace('Z', '+00:00'))\n    msg_time = datetime.fromisoformat(message_created.replace('Z', '+00:00'))\n    \n    time_diff = (msg_time - conv_time).total_seconds() * 1000\n    item.json.isInitialMessage = time_diff <= 5000\n\nreturn _input.all()"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        100
      ],
      "id": "267a9c02-4347-4135-8e4e-c753b6159a21",
      "name": "Code"
    },
    {
      "parameters": {
        "resource": "assistant",
        "assistantId": {
          "__rl": true,
          "value": "asst_ddwAna95PNJj3m0ZDmnVB7yf",
          "mode": "list",
          "cachedResultName": "Dixa Email Assistant"
        },
        "prompt": "define",
        "text": "=Users email:\n {{ $json.body.data.text }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        660,
        0
      ],
      "id": "6fd15894-1211-4610-83d0-b369c0060033",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "Z9cnsiSvaNyVNKqa",
          "name": "OpenAi account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "63c5dd4f-8d9f-4348-852a-1914032b5e61",
              "leftValue": "={{ $json.isInitialMessage }}",
              "rightValue": "true",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        440,
        100
      ],
      "id": "8d94ea89-f812-4b6f-ae4a-f45b12e7ea9e",
      "name": "If"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        660,
        220
      ],
      "id": "3d45f090-02d7-4312-8e87-6e6290de2866",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        900,
        220
      ],
      "id": "16f55f68-bbdc-42b7-94e3-e0e7ba557934",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import json\nimport re\n\n# Configuration\nDIXA_API_KEY = \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkYjdkOTY2OC03OGJlLTQ1OTYtYmYxYy1kNDYzZTExZWI2YjEiLCJ0eXBlIjoiYXBpIiwib3JnX2lkIjoiN2MwMzA4ZjQtODIxNy00MWU1LThkYmUtNzI1NTI1YzQ3ZWUzIiwianRpIjoiZjY0NjAyOTNhMTE2NGY5N2I0MjgzM2YzNzJmZjk1N2MifQ.mFVVJUql2W5m5evpKWFPXsXUst3eniAF-zrcgBh0LUc\"\n#TODO: remove this and move it to the env var\nDIXA_BASE_URL = \"https://dev.dixa.io/v1\"\nAGENT_ID = \"65355895-3def-4735-aed4-82ef1f2b7000\"\n\n# Webhook HTML content to insert into email\nwebhook_content = \"\"\"\n<p>Please confirm your response:</p>\n\n<a href=\"https://your-webhook-url.com/respond?answer=yes\"\n   style=\"display: inline-block; padding: 10px 20px; margin-right: 10px; background-color: #28a745; color: white; text-decoration: none; border-radius: 4px;\">\n   Yes\n</a>\n\n<a href=\"https://your-webhook-url.com/responded_false\"\n   style=\"display: inline-block; padding: 10px 20px; background-color: #dc3545; color: white; text-decoration: none; border-radius: 4px;\">\n   No\n</a>\n\"\"\"\n\ndef clean_text_for_json(text):\n    \"\"\"Clean text to be safely used in JSON\"\"\"\n    if not text:\n        return \"\"\n\n    # Normalize line breaks and whitespace\n    cleaned = text.replace('\\r\\n', '\\n').replace('\\r', '\\n')\n    cleaned = re.sub(r'\\n\\s*\\n', '\\n\\n', cleaned)\n    cleaned = re.sub(r'[ \\t]+', ' ', cleaned)\n    cleaned = cleaned.strip()\n\n    return cleaned\n\nfor item in _input.all():\n    try:\n        # Get data from previous nodes\n        ai_response = item.json.get('output', '')\n        conversation_id = 33748  # TODO: this will be dynamic with data.conversation_id\n\n        print(f\"üéØ Processing conversation: {conversation_id}\")\n        print(f\"üìù AI Response length: {len(ai_response)} characters\")\n\n        # Append webhook buttons to the response\n        combined_content = ai_response + \"\\n\\n\" + webhook_content\n        cleaned_response = clean_text_for_json(combined_content)\n\n        print(f\"üßπ Cleaned response length: {len(cleaned_response)} characters\")\n\n        # Prepare the request\n        url = f\"{DIXA_BASE_URL}/conversations/{conversation_id}/messages\"\n\n        headers = {\n            \"Authorization\": f\"Bearer {DIXA_API_KEY}\",\n            \"Content-Type\": \"application/json\"\n        }\n\n        payload = {\n            \"agentId\": AGENT_ID,\n            \"content\": {\n                \"_type\": \"Text\",\n                \"value\": cleaned_response,\n                \"contentType\": \"text/html\"\n            },\n            \"_type\": \"Outbound\"\n        }\n\n        # You can pass the prepared data along if needed\n        item.json.cleanedResponse = cleaned_response\n        item.json.requestHeaders = headers\n        item.json.requestBody = payload\n        item.json.requestUrl = url\n\n    except Exception as e:\n        print(f\"‚ùå Error: {str(e)}\")\n\nreturn _input.all()\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1040,
        0
      ],
      "id": "40acc427-b075-48f3-a5cc-2db362bc9063",
      "name": "Json converter + webhook"
    },
    {
      "parameters": {
        "multipleMethods": true,
        "httpMethod": [
          "GET"
        ],
        "path": "responded_false",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1300,
        400
      ],
      "id": "6b65c0fb-a369-40b1-a73a-3163b618f2c3",
      "name": "Webhook for Response No",
      "webhookId": "7f757733-711c-430c-a126-48338e97dd1e"
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://dev.dixa.io/v1/conversations/33332/transfer/queue",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkYjdkOTY2OC03OGJlLTQ1OTYtYmYxYy1kNDYzZTExZWI2YjEiLCJ0eXBlIjoiYXBpIiwib3JnX2lkIjoiN2MwMzA4ZjQtODIxNy00MWU1LThkYmUtNzI1NTI1YzQ3ZWUzIiwianRpIjoiZjY0NjAyOTNhMTE2NGY5N2I0MjgzM2YzNzJmZjk1N2MifQ.mFVVJUql2W5m5evpKWFPXsXUst3eniAF-zrcgBh0LUc\""
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "=payload = {\n  \"queueId\": \"d768da52-2eb2-4841-a5e8-ce2d7eed3f3f\",\n  \"userId\":  {{ $json.user_id }}\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1700,
        0
      ],
      "id": "01e03033-0d10-4458-8a97-9ad3d1232c59",
      "name": "Transfer Queue"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://dev.dixa.io/v1/conversations/33332/messages",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkYjdkOTY2OC03OGJlLTQ1OTYtYmYxYy1kNDYzZTExZWI2YjEiLCJ0eXBlIjoiYXBpIiwib3JnX2lkIjoiN2MwMzA4ZjQtODIxNy00MWU1LThkYmUtNzI1NTI1YzQ3ZWUzIiwianRpIjoiZjY0NjAyOTNhMTE2NGY5N2I0MjgzM2YzNzJmZjk1N2MifQ.mFVVJUql2W5m5evpKWFPXsXUst3eniAF-zrcgBh0LUc\""
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"agentId\": \"db7d9668-78be-4596-bf1c-d463e11eb6b1\",\n    \"content\": {\n        \"_type\": \"Html\",\n        \"value\": {{ $json.cleanedResponse }}\n    },\n    \"_type\": \"Outbound\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1260,
        0
      ],
      "id": "4a9f3af6-926f-4fc5-bf9c-acead1ea613c",
      "name": "Send Email with webhook included"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1480,
        0
      ],
      "id": "0911ed34-498a-4f4b-b2b7-43e8d1bbc980",
      "name": "Postgres"
    },
    {
      "parameters": {
        "content": "Store conversation ID, user id, message ID, AI response, ",
        "height": 80,
        "width": 160
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1460,
        160
      ],
      "id": "9e5a9ab9-d0ae-4247-a02e-8fb3d68a4f4d",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "Create a new platform :D",
        "height": 80,
        "width": 220
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        760,
        420
      ],
      "id": "9ec029ed-1304-439f-a994-0d4638d5c880",
      "name": "Sticky Note1"
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "primary-production-13b9.up.railway.app",
            "user-agent": "AHC/2.1",
            "content-length": "2107",
            "accept": "*/*",
            "content-type": "application/json",
            "x-dixa-signature": "t=1748264463123,v1=fd1e89518e789ddbd2860abd7ec035a4a2365e39f6e2cf79f50abe9649008791",
            "x-dixa-subscription-id": "88f9857e-b0f6-469b-b086-417f70111a1c",
            "x-forwarded-for": "54.77.120.43",
            "x-forwarded-host": "primary-production-13b9.up.railway.app",
            "x-forwarded-proto": "https",
            "x-railway-edge": "railway/europe-west4",
            "x-railway-request-id": "_8FSOdVlQs-eUVt80KZcTw",
            "x-real-ip": "54.77.120.43",
            "x-request-start": "1748264500578",
            "accept-encoding": "gzip"
          },
          "params": {},
          "query": {},
          "body": {
            "event_id": "88c2ee52-1a56-492d-b5aa-1117d29480cf",
            "event_fqn": "CONVERSATION_MESSAGE_ADDED",
            "event_version": "1",
            "event_timestamp": "2025-05-26T13:01:02.954Z",
            "organization": {
              "id": "7c0308f4-8217-41e5-8dbe-725525c47ee3",
              "name": "Whoppah"
            },
            "data": {
              "conversation": {
                "csid": 33356,
                "channel": "EMAIL",
                "status": "OPEN",
                "direction": "INBOUND",
                "queue": null,
                "contact_point": "whoppah-support@email.dixa.io",
                "requester": {
                  "id": "db7d9668-78be-4596-bf1c-d463e11eb6b1",
                  "name": "√ñmer",
                  "email": "omer@whoppah.com",
                  "phone": null,
                  "roles": [],
                  "user_type": "Member"
                },
                "assignee": null,
                "subject": "Help with my webhook and order",
                "tags": [],
                "created_at": "2025-05-26T13:01:02.908Z"
              },
              "author": {
                "id": "db7d9668-78be-4596-bf1c-d463e11eb6b1",
                "name": "√ñmer",
                "email": "omer@whoppah.com",
                "phone": null,
                "roles": [],
                "user_type": "Member"
              },
              "created_at": "2025-05-26T13:01:02.954Z",
              "message_id": "10b8e1e9-4e9c-4be3-80c8-11bf24f85e1c",
              "text": "Help me out with the webhook test, content and message should be on the\nsame datetimetime order id 13491230513\nLet's see if it works out\n*√ñmer Alkƒ±n*\nEngineering Manager\n\\+31 (0) 6 27236020\n[omer@whoppah.com](mailto:omer@whoppah.com)",
              "direction": "inbound",
              "channel": "EMAIL",
              "content": {
                "text": "Help me out with the webhook test, content and message should be on the\nsame datetimetime order id 13491230513\nLet's see if it works out\n*√ñmer Alkƒ±n*\nEngineering Manager\n\\+31 (0) 6 27236020\n[omer@whoppah.com](mailto:omer@whoppah.com)",
                "content_type": null,
                "original_content_url": "/private/7c0308f4-8217-41e5-8dbe-725525c47ee3/email_original_data/906ba6db40d6ae24e0e53bfb9e22e8a8_3a47af08-aeb2-46e0-8969-89b994a17600",
                "processed_content_url": null
              },
              "attachments": [],
              "external_id": null
            }
          },
          "webhookUrl": "https://primary-production-13b9.up.railway.app/webhook-test/dixa_conversation_started",
          "executionMode": "test"
        }
      }
    ],
    "Json converter + webhook": [
      {
        "json": {
          "output": "```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Whoppah Support</title>\n</head>\n<body>\n    <p>Dear √ñmer,</p>\n\n    <p>Thank you for reaching out to us regarding the webhook test for order ID 13491230513. We understand the importance of ensuring that the content and message are correctly aligned with the datetime order.</p>\n\n    <p>To assist you further, please ensure that the webhook is set up correctly in your system. If you encounter any issues or need specific guidance on setting up or testing the webhook, feel free to reach out to our technical support team at <a href=\"mailto:support@whoppah.com\">support@whoppah.com</a>.</p>\n\n    <p>Here are some helpful resources that might assist you:</p>\n    <ul>\n        <li><a href=\"https://support.whoppah.com/article/108-phishing-and-suspicious-messages\">Phishing and Suspicious Messages</a> - Stay informed about security measures and how to recognize suspicious activities.</li>\n        <li><a href=\"https://support.whoppah.com/article/97-how-do-i-contact-whoppah\">How to Contact Whoppah</a> - Get in touch with our support team for any assistance you need.</li>\n        <li><a href=\"https://support.whoppah.com/article/18-how-will-i-be-informed-about-the-shipment-and-what\">Shipment Information</a> - Learn about how you will be informed about shipments and what to do if there are issues.</li>\n    </ul>\n\n    <p>If you have any further questions or need additional support, please do not hesitate to contact us.</p>\n\n    <p>Best regards,<br>\n    Whoppah Support Team</p>\n</body>\n</html>\n```",
          "threadId": "thread_dK6lucMsAbimTjR62bNc7q0K",
          "cleanedResponse": "\"```html\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n    <meta charset=\\\"UTF-8\\\">\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n    <title>Whoppah Support</title>\\n</head>\\n<body>\\n    <p>Dear \\u00d6mer,</p>\\n\\n    <p>Thank you for reaching out to us regarding the webhook test for order ID 13491230513. We understand the importance of ensuring that the content and message are correctly aligned with the datetime order.</p>\\n\\n    <p>To assist you further, please ensure that the webhook is set up correctly in your system. If you encounter any issues or need specific guidance on setting up or testing the webhook, feel free to reach out to our technical support team at <a href=\\\"mailto:support@whoppah.com\\\">support@whoppah.com</a>.</p>\\n\\n    <p>Here are some helpful resources that might assist you:</p>\\n    <ul>\\n        <li><a href=\\\"https://support.whoppah.com/article/108-phishing-and-suspicious-messages\\\">Phishing and Suspicious Messages</a> - Stay informed about security measures and how to recognize suspicious activities.</li>\\n        <li><a href=\\\"https://support.whoppah.com/article/97-how-do-i-contact-whoppah\\\">How to Contact Whoppah</a> - Get in touch with our support team for any assistance you need.</li>\\n        <li><a href=\\\"https://support.whoppah.com/article/18-how-will-i-be-informed-about-the-shipment-and-what\\\">Shipment Information</a> - Learn about how you will be informed about shipments and what to do if there are issues.</li>\\n    </ul>\\n\\n    <p>If you have any further questions or need additional support, please do not hesitate to contact us.</p>\\n\\n    <p>Best regards,<br>\\n    Whoppah Support Team</p>\\n</body>\\n</html>\\n```\"",
          "requestHeaders": {}
        }
      }
    ]
  },
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Json converter + webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "OpenAI",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Json converter + webhook": {
      "main": [
        [
          {
            "node": "Send Email with webhook included",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook for Response No": {
      "main": [
        []
      ]
    },
    "Send Email with webhook included": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1904f98b-8572-4f63-a947-101ce3b4b38e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "31008796bf4897f7017d4fb60bd778cff3e3c891bfff97ba64f4683515e7885b"
  },
  "id": "GVbjoeNl69LiD097",
  "tags": []
}